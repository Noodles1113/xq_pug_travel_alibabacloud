server:
  port: 8012

spring:
  application:
    name: xq-pug-order-service
  sleuth:
    sampler:
      # RateLimitingSampler抽样策略: 设置限速采集，
      rate: 100 # 每秒间隔接受的trace量 probability的方式会自动失效
      # ProbabilityBasedSampler抽样策略:采样比例
      # probability: 1.0 # 采样比例 1.0，表示100% 默认是：0.1
  # kafka连接配置
  kafka:
    # kafka的服务地址
    bootstrap-servers: 127.0.0.1:9092
    producer:
      # 消息发送失败以后，尝试3次
      retries: 3
    consumer:
      # 代表从最后一条开始消费
      auto-offset-reset: latest
  # zipkin服务配置
  zipkin.:
    base-url: http://localhost:9411
    sender:
      type: kafka
    kafka:
      topic: zipkin
  cloud:
    nacos:
      discovery:
        # 服务的注册与发现 默认是true
        enabled: true
        server-addr: 127.0.0.1:8848
        #home
        namespace: 2430074e-2696-45e8-b993-75073da3c7ef
        #work
        #namespace: 281a0bfd-0734-4c05-abbd-b84042af732a
      config:
        server-addr: 127.0.0.1:8848
        prefix: ${spring.application.name}
        file-extension: yaml
        group: DEFAULT_GROUP
        #home
        namespace: 2430074e-2696-45e8-b993-75073da3c7ef
        #work
        #namespace: 281a0bfd-0734-4c05-abbd-b84042af732a
    sentinel:
      enabled: true
      transport:
        # 指定sentinel的服务地址
        dashboard: 127.0.0.1:8080
      web-context-unify: false # 关闭context整合

# 暴露监控断点，给后续的Admin进行监控处理
# 获取单独访问http://localhost:8011/actuator
management:
  endpoints:
    web:
      exposure:
        include: '*'

feign:
  compression:
    request:
      enabled: false #请求压缩
      min-request-size: 2048 # 最小请求长度
      mime-types: text/xml,application/xml,application/json # 压缩的类型
    response:
      useGzipDecoder: false
      enabled: true # 响应压缩
  sentinel:
    enabled: true
  client:
    config:
      # 全局配置
      default:
        # 建立连接所用的时间，单位是：毫秒
        connectTimeout: 5000
        # 建立连接后从服务器读取到资源所用的时间 单位是：毫秒
        readTimeout: 5000
      # 为xq-pug-user-service用户服务配置
      xq-pug-user-service:
# 现在遇到的问题是自定义拦截器后貌似变成了全局的拦截器，如果再对单独的服务设置拦截器时会造成拦截器被执行了两次
#        requestInterceptors:
#          - com.pug.cloud.fegin.UserFeginInterceptor
        # 建立连接所用的时间，单位是：毫秒
        connectTimeout: 1000
        # 建立连接后从服务器读取到资源所用的时间 单位是：毫秒
        readTimeout: 1000
        logger-level: basic
  httpclient:
    enabled: true # 开启feign对HttpClient的支持
    max-connections: 200 # 最大的连接数
    max-connections-per-route: 50 # 每个路径的最大连接数